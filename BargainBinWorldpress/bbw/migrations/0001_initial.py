# Generated by Django 4.1.1 on 2022-09-19 18:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('count', models.IntegerField(default=0, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('parent_comment_id', models.IntegerField(default=0, editable=False)),
                ('parent_comment_path', models.CharField(default='', editable=False, max_length=255)),
                ('comments_depth', models.SmallIntegerField(default=0, editable=False)),
                ('comment_by_op', models.BooleanField(default=False, editable=False)),
                ('updoot_count', models.IntegerField(default=0, editable=False)),
                ('updoot_count_thread', models.BigIntegerField(default=0, editable=False)),
                ('replies_count', models.IntegerField(default=0, editable=False)),
                ('publication_date', models.DateTimeField(auto_now_add=True)),
                ('has_been_edited', models.BooleanField(default=False, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_article', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('updoot_count', models.IntegerField(default=0, editable=False)),
                ('published', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SiteUser',
            fields=[
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('display_username', models.CharField(max_length=100, unique=True)),
                ('is_author', models.BooleanField(default=False)),
                ('can_publish', models.BooleanField(default=False)),
                ('is_editor', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_moderator', models.BooleanField(default=False)),
                ('muted_until', models.DateTimeField(null=True)),
                ('banned_until', models.DateTimeField(null=True)),
                ('post_karma', models.BigIntegerField(default=0, editable=False)),
                ('comment_karma', models.BigIntegerField(default=0, editable=False)),
                ('date_registered', models.DateTimeField(auto_now_add=True)),
                ('total_posts', models.IntegerField(default=0, editable=False)),
                ('total_comments', models.IntegerField(default=0, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, unique=True)),
                ('count', models.IntegerField(default=0, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='PostUpdoots',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_updoot', models.BooleanField(default=True, editable=False)),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bbw.post')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bbw.siteuser')),
            ],
        ),
        migrations.CreateModel(
            name='PostsTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bbw.post')),
                ('tag_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bbw.tags')),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bbw.siteuser'),
        ),
        migrations.AddField(
            model_name='post',
            name='category_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bbw.category'),
        ),
        migrations.CreateModel(
            name='CommentUpdoots',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_updoot', models.BooleanField(default=True, editable=False)),
                ('comment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bbw.comment')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bbw.siteuser')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='post_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bbw.post'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bbw.siteuser'),
        ),
    ]
